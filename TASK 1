import tkinter as tk
from tkinter import messagebox
import json
import os

FILE_NAME = "tasks.json"

# Load tasks from file
def load_tasks():
    if os.path.exists(FILE_NAME):
        with open(FILE_NAME, "r") as file:
            return json.load(file)
    return []

# Save tasks to file
def save_tasks():
    with open(FILE_NAME, "w") as file:
        json.dump(tasks, file)

# Update listbox
def update_listbox():
    listbox.delete(0, tk.END)
    for task in tasks:
        status = "‚úÖ" if task['done'] else "‚ùå"
        listbox.insert(tk.END, f"{status} {task['task']}")

# Add new task
def add_task():
    task_text = entry.get().strip()
    if task_text:
        tasks.append({"task": task_text, "done": False})
        entry.delete(0, tk.END)
        save_tasks()
        update_listbox()
    else:
        messagebox.showwarning("Input Error", "Please enter a task.")

# Mark selected task as done
def mark_done():
    selected = listbox.curselection()
    if selected:
        index = selected[0]
        tasks[index]["done"] = True
        save_tasks()
        update_listbox()
    else:
        messagebox.showwarning("Selection Error", "Please select a task.")

# Mark selected task as undone
def mark_undone():
    selected = listbox.curselection()
    if selected:
        index = selected[0]
        tasks[index]["done"] = False
        save_tasks()
        update_listbox()
    else:
        messagebox.showwarning("Selection Error", "Please select a task.")

# Delete selected task
def delete_task():
    selected = listbox.curselection()
    if selected:
        index = selected[0]
        del tasks[index]
        save_tasks()
        update_listbox()
    else:
        messagebox.showwarning("Selection Error", "Please select a task.")

# === GUI Setup ===
root = tk.Tk()
root.title("üåü To-Do List App")
root.geometry("400x450")
root.config(bg="#f0f5f9")  # light background

tasks = load_tasks()

# === Frame for input ===
frame = tk.Frame(root, bg="#f0f5f9")
frame.pack(pady=10)

entry = tk.Entry(frame, width=25, font=("Arial", 12))
entry.grid(row=0, column=0, padx=5)

add_btn = tk.Button(frame, text="Add Task", command=add_task, bg="#4CAF50", fg="white", font=("Arial", 10, "bold"))
add_btn.grid(row=0, column=1)

# === Task List ===
listbox = tk.Listbox(root, width=40, height=10, font=("Arial", 12), bg="#ffffff", fg="#333333", selectbackground="#a8dadc")
listbox.pack(pady=10)

# === Action Buttons ===
done_btn = tk.Button(root, text="‚úî Mark as Done", command=mark_done, bg="#2196F3", fg="white", font=("Arial", 10, "bold"))
done_btn.pack(pady=4)

undone_btn = tk.Button(root, text="‚Ü© Mark as Undone", command=mark_undone, bg="#ff9800", fg="white", font=("Arial", 10, "bold"))
undone_btn.pack(pady=4)

del_btn = tk.Button(root, text="üóë Delete Task", command=delete_task, bg="#f44336", fg="white", font=("Arial", 10, "bold"))
del_btn.pack(pady=4)

# Initialize list
update_listbox()

# Run loop
root.mainloop()
